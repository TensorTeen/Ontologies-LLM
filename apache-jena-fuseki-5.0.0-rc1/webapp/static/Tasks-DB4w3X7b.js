import{M as u}from"./Menu-eIU-7LxT.js";import{_,bR as k,r as n,a as f,b as s,d as r,o as h}from"./index-Gcd1vx2D.js";const p={name:"ManageTasks",data(){return{polling:null,tasks:[],isBusy:!0,fields:[{key:"task",label:"task",sortable:!0,sortDirection:"asc"},{key:"taskId",label:"task ID",sortable:!0,sortDirection:"asc"},{key:"started",label:"started",sortable:!0,sortDirection:"asc"},{key:"finished",label:"finished",sortable:!0,sortDirection:"asc"}]}},computed:{tasksReversed(){return this.tasks?[...this.tasks].reverse():[]}},components:{Menu:u,"table-listing":k},async beforeRouteEnter(e,t,a){a(o=>{o.$fusekiService.getTasks().then(i=>{o.tasks=i.data,o.isBusy=null})})},mounted(){const e=this;this.polling=setInterval(async()=>{e.isBusy=!0,e.$fusekiService.getTasks().then(t=>{e.tasks=t.data,e.isBusy=null})},1e4)},beforeRouteLeave(e,t,a){this.polling&&clearInterval(this.polling),a()}},b={class:"container-fluid"},m={class:"row mt-4"},v={class:"col-12"},y=s("h2",null,"Tasks",-1),g={class:"card"},B={class:"card-header"},T={class:"card-body"},x={class:"row"},D={class:"col"};function M(e,t,a,o,i,l){const c=n("Menu"),d=n("table-listing");return h(),f("div",b,[s("div",m,[s("div",v,[y,s("div",g,[s("nav",B,[r(c)]),s("div",T,[s("div",null,[s("div",x,[s("div",D,[r(d,{fields:i.fields,items:l.tasksReversed,"is-busy":i.isBusy,placeholder:"Filter tasks","empty-text":"No tasks created","empty-filtered-text":"No tasks found"},null,8,["fields","items","is-busy"])])])])])])])])])}const N=_(p,[["render",M]]);export{N as default};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGFza3MtREI0dzNYN2IuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy92aWV3cy9tYW5hZ2UvVGFza3MudnVlIl0sInNvdXJjZXNDb250ZW50IjpbIjwhLS1cbiAgIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmUgb3IgbW9yZVxuICAgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZSBkaXN0cmlidXRlZCB3aXRoXG4gICB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24gcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuXG4gICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZSB0byBZb3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMFxuICAgKHRoZSBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aFxuICAgdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG4gICBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gICBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gICBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAgIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAgIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuLS0+XG5cbjx0ZW1wbGF0ZT5cbiAgPGRpdiBjbGFzcz1cImNvbnRhaW5lci1mbHVpZFwiPlxuICAgIDxkaXYgY2xhc3M9XCJyb3cgbXQtNFwiPlxuICAgICAgPGRpdiBjbGFzcz1cImNvbC0xMlwiPlxuICAgICAgICA8aDI+VGFza3M8L2gyPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiY2FyZFwiPlxuICAgICAgICAgIDxuYXYgY2xhc3M9XCJjYXJkLWhlYWRlclwiPlxuICAgICAgICAgICAgPE1lbnUgLz5cbiAgICAgICAgICA8L25hdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FyZC1ib2R5XCI+XG4gICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicm93XCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbFwiPlxuICAgICAgICAgICAgICAgICAgPHRhYmxlLWxpc3RpbmdcbiAgICAgICAgICAgICAgICAgICAgOmZpZWxkcz1cImZpZWxkc1wiXG4gICAgICAgICAgICAgICAgICAgIDppdGVtcz1cInRhc2tzUmV2ZXJzZWRcIlxuICAgICAgICAgICAgICAgICAgICA6aXMtYnVzeT1cImlzQnVzeVwiXG4gICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiRmlsdGVyIHRhc2tzXCJcbiAgICAgICAgICAgICAgICAgICAgZW1wdHktdGV4dD1cIk5vIHRhc2tzIGNyZWF0ZWRcIlxuICAgICAgICAgICAgICAgICAgICBlbXB0eS1maWx0ZXJlZC10ZXh0PVwiTm8gdGFza3MgZm91bmRcIlxuICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuaW1wb3J0IE1lbnUgZnJvbSAnQC9jb21wb25lbnRzL21hbmFnZS9NZW51LnZ1ZSdcbmltcG9ydCBUYWJsZUxpc3RpbmcgZnJvbSAnQC9jb21wb25lbnRzL2RhdGFzZXQvVGFibGVMaXN0aW5nLnZ1ZSdcblxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAnTWFuYWdlVGFza3MnLFxuXG4gIGRhdGEgKCkge1xuICAgIHJldHVybiB7XG4gICAgICBwb2xsaW5nOiBudWxsLFxuICAgICAgdGFza3M6IFtdLFxuICAgICAgaXNCdXN5OiB0cnVlLFxuICAgICAgZmllbGRzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBrZXk6ICd0YXNrJyxcbiAgICAgICAgICBsYWJlbDogJ3Rhc2snLFxuICAgICAgICAgIHNvcnRhYmxlOiB0cnVlLFxuICAgICAgICAgIHNvcnREaXJlY3Rpb246ICdhc2MnXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBrZXk6ICd0YXNrSWQnLFxuICAgICAgICAgIGxhYmVsOiAndGFzayBJRCcsXG4gICAgICAgICAgc29ydGFibGU6IHRydWUsXG4gICAgICAgICAgc29ydERpcmVjdGlvbjogJ2FzYydcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIGtleTogJ3N0YXJ0ZWQnLFxuICAgICAgICAgIGxhYmVsOiAnc3RhcnRlZCcsXG4gICAgICAgICAgc29ydGFibGU6IHRydWUsXG4gICAgICAgICAgc29ydERpcmVjdGlvbjogJ2FzYydcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIGtleTogJ2ZpbmlzaGVkJyxcbiAgICAgICAgICBsYWJlbDogJ2ZpbmlzaGVkJyxcbiAgICAgICAgICBzb3J0YWJsZTogdHJ1ZSxcbiAgICAgICAgICBzb3J0RGlyZWN0aW9uOiAnYXNjJ1xuICAgICAgICB9XG4gICAgICBdXG4gICAgfVxuICB9LFxuXG4gIGNvbXB1dGVkOiB7XG4gICAgdGFza3NSZXZlcnNlZCAoKSB7XG4gICAgICBpZiAoIXRoaXMudGFza3MpIHtcbiAgICAgICAgcmV0dXJuIFtdXG4gICAgICB9XG4gICAgICByZXR1cm4gWy4uLnRoaXMudGFza3NdLnJldmVyc2UoKVxuICAgIH1cbiAgfSxcblxuICBjb21wb25lbnRzOiB7XG4gICAgTWVudSxcbiAgICAndGFibGUtbGlzdGluZyc6IFRhYmxlTGlzdGluZ1xuICB9LFxuXG4gIGFzeW5jIGJlZm9yZVJvdXRlRW50ZXIgKHRvLCBmcm9tLCBuZXh0KSB7XG4gICAgbmV4dCh2bSA9PiB7XG4gICAgICB2bS4kZnVzZWtpU2VydmljZVxuICAgICAgICAuZ2V0VGFza3MoKVxuICAgICAgICAudGhlbihyZXNwb25zZSA9PiB7XG4gICAgICAgICAgdm0udGFza3MgPSByZXNwb25zZS5kYXRhXG4gICAgICAgICAgdm0uaXNCdXN5ID0gbnVsbFxuICAgICAgICB9KVxuICAgIH0pXG4gIH0sXG5cbiAgbW91bnRlZCAoKSB7XG4gICAgY29uc3Qgdm0gPSB0aGlzXG4gICAgdGhpcy5wb2xsaW5nID0gc2V0SW50ZXJ2YWwoYXN5bmMgKCkgPT4ge1xuICAgICAgdm0uaXNCdXN5ID0gdHJ1ZVxuICAgICAgdm0uJGZ1c2VraVNlcnZpY2VcbiAgICAgICAgLmdldFRhc2tzKClcbiAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4ge1xuICAgICAgICAgIHZtLnRhc2tzID0gcmVzcG9uc2UuZGF0YVxuICAgICAgICAgIHZtLmlzQnVzeSA9IG51bGxcbiAgICAgICAgfSlcbiAgICB9LCAxMDAwMClcbiAgfSxcblxuICBiZWZvcmVSb3V0ZUxlYXZlICh0bywgZnJvbSwgbmV4dCkge1xuICAgIGlmICh0aGlzLnBvbGxpbmcpIHtcbiAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5wb2xsaW5nKVxuICAgIH1cbiAgICBuZXh0KClcbiAgfVxufVxuPC9zY3JpcHQ+XG4iXSwibmFtZXMiOlsiX3NmY19tYWluIiwiTWVudSIsIlRhYmxlTGlzdGluZyIsInRvIiwiZnJvbSIsIm5leHQiLCJ2bSIsInJlc3BvbnNlIiwiX2hvaXN0ZWRfMSIsIl9ob2lzdGVkXzIiLCJfaG9pc3RlZF8zIiwiX2hvaXN0ZWRfNCIsIl9jcmVhdGVFbGVtZW50Vk5vZGUiLCJfaG9pc3RlZF81IiwiX2hvaXN0ZWRfNiIsIl9ob2lzdGVkXzciLCJfaG9pc3RlZF84IiwiX2hvaXN0ZWRfOSIsIl9vcGVuQmxvY2siLCJfY3JlYXRlRWxlbWVudEJsb2NrIiwiX2NyZWF0ZVZOb2RlIiwiX2NvbXBvbmVudF9NZW51IiwiX2NvbXBvbmVudF90YWJsZV9saXN0aW5nIiwiJGRhdGEiLCIkb3B0aW9ucyJdLCJtYXBwaW5ncyI6InFIQW9EQSxNQUFLQSxFQUFVLENBQ2IsS0FBTSxjQUVOLE1BQVEsQ0FDTixNQUFPLENBQ0wsUUFBUyxLQUNULE1BQU8sQ0FBRSxFQUNULE9BQVEsR0FDUixPQUFRLENBQ04sQ0FDRSxJQUFLLE9BQ0wsTUFBTyxPQUNQLFNBQVUsR0FDVixjQUFlLEtBQ2hCLEVBQ0QsQ0FDRSxJQUFLLFNBQ0wsTUFBTyxVQUNQLFNBQVUsR0FDVixjQUFlLEtBQ2hCLEVBQ0QsQ0FDRSxJQUFLLFVBQ0wsTUFBTyxVQUNQLFNBQVUsR0FDVixjQUFlLEtBQ2hCLEVBQ0QsQ0FDRSxJQUFLLFdBQ0wsTUFBTyxXQUNQLFNBQVUsR0FDVixjQUFlLEtBQ2pCLENBQ0YsQ0FDRixDQUNELEVBRUQsU0FBVSxDQUNSLGVBQWlCLENBQ2YsT0FBSyxLQUFLLE1BR0gsQ0FBQyxHQUFHLEtBQUssS0FBSyxFQUFFLFFBQVEsRUFGdEIsQ0FBQyxDQUdaLENBQ0QsRUFFRCxXQUFZLENBQ1YsS0FBQUMsRUFDQSxnQkFBaUJDLENBQ2xCLEVBRUQsTUFBTSxpQkFBa0JDLEVBQUlDLEVBQU1DLEVBQU0sQ0FDdENBLEVBQUtDLEdBQU0sQ0FDVEEsRUFBRyxlQUNBLFNBQVMsRUFDVCxLQUFLQyxHQUFZLENBQ2hCRCxFQUFHLE1BQVFDLEVBQVMsS0FDcEJELEVBQUcsT0FBUyxLQUNiLEVBQ0osQ0FDRixFQUVELFNBQVcsQ0FDVCxNQUFNQSxFQUFLLEtBQ1gsS0FBSyxRQUFVLFlBQVksU0FBWSxDQUNyQ0EsRUFBRyxPQUFTLEdBQ1pBLEVBQUcsZUFDQSxTQUFTLEVBQ1QsS0FBS0MsR0FBWSxDQUNoQkQsRUFBRyxNQUFRQyxFQUFTLEtBQ3BCRCxFQUFHLE9BQVMsS0FDYixDQUNKLEVBQUUsR0FBSyxDQUNULEVBRUQsaUJBQWtCSCxFQUFJQyxFQUFNQyxFQUFNLENBQzVCLEtBQUssU0FDUCxjQUFjLEtBQUssT0FBTyxFQUU1QkEsRUFBSyxDQUNQLENBQ0YsRUFuSE9HLEVBQUEsQ0FBQSxNQUFNLGlCQUFpQixFQUNyQkMsRUFBQSxDQUFBLE1BQU0sVUFBVSxFQUNkQyxFQUFBLENBQUEsTUFBTSxRQUFRLEVBQ2pCQyxFQUFBQyxFQUFjLFVBQVYsUUFBSyxFQUFBLEVBQ0pDLEVBQUEsQ0FBQSxNQUFNLE1BQU0sRUFDVkMsRUFBQSxDQUFBLE1BQU0sYUFBYSxFQUduQkMsRUFBQSxDQUFBLE1BQU0sV0FBVyxFQUViQyxFQUFBLENBQUEsTUFBTSxLQUFLLEVBQ1RDLEVBQUEsQ0FBQSxNQUFNLEtBQUssaUVBWDlCLE9BQUFDLEVBQUEsRUFBQUMsRUEyQk0sTUEzQk5YLEVBMkJNLENBMUJKSSxFQXlCTSxNQXpCTkgsRUF5Qk0sQ0F4QkpHLEVBdUJNLE1BdkJORixFQXVCTSxDQXRCSkMsRUFDQUMsRUFvQk0sTUFwQk5DLEVBb0JNLENBbkJKRCxFQUVNLE1BRk5FLEVBRU0sQ0FESk0sRUFBUUMsQ0FBQSxJQUVWVCxFQWVNLE1BZk5HLEVBZU0sQ0FkSkgsRUFhTSxNQUFBLEtBQUEsQ0FaSkEsRUFXTSxNQVhOSSxFQVdNLENBVkpKLEVBU00sTUFUTkssRUFTTSxDQVJKRyxFQU9FRSxFQUFBLENBTkMsT0FBUUMsRUFBTSxPQUNkLE1BQU9DLEVBQWEsY0FDcEIsVUFBU0QsRUFBTSxPQUNoQixZQUFZLGVBQ1osYUFBVyxtQkFDWCxzQkFBb0IifQ==

import{M as g,a as v,c as S}from"./current-dataset-navigation-guards-KietUc7z.js";import{d as D}from"./index-bVS_vDGC.js";import{P as k}from"./bootstrap.esm-LmPVqsBZ.js";import{_ as z,bO as L,r as f,a as o,b as t,t as c,d as p,F as b,e as m,bB as h,o as i}from"./index-Gcd1vx2D.js";const $={name:"DatasetInfo",components:{JenaTable:L,Menu:g},...v,mixins:[S],data(){return{datasetStats:{},datasetSize:null,isDatasetSizeLoading:null,statsFields:[{key:"endpoint",label:"Endpoint"},{key:"total",label:"Requests",sortable:!0,sortDirection:"asc"},{key:"good",label:"Good",sortable:!0,sortDirection:"asc"},{key:"bad",label:"Bad",sortable:!0,sortDirection:"asc"}],countGraphFields:[{key:"name",label:"graph name",sortable:!0,sortDirection:"asc"},{key:"triples",label:"triples",sortable:!0,sortDirection:"asc"}]}},computed:{statsItems(){if(!this.datasetStats||!this.datasetStats.datasets)return[];const s=this.datasetStats.datasets[`/${this.datasetName}`],e=s.endpoints;if(!s||!e)return[];const d=Object.keys(e).map(a=>({endpoint:a.startsWith("_")?e[a].description:`${e[a].description} (${a})`,operation:e[a].operation,total:e[a].Requests,good:e[a].RequestsGood,bad:e[a].RequestsBad}));return d.sort((a,r)=>a.operation.localeCompare(r.operation)),d},overall(){if(!this.datasetStats||!this.datasetStats.datasets)return[];const s=this.datasetStats.datasets[`/${this.datasetName}`];return{endpoint:"Overall",total:s.Requests,good:s.RequestsGood,bad:s.RequestsBad}},countGraphItems(){return this.datasetSize?Object.keys(this.datasetSize).map(s=>({name:s,triples:this.datasetSize[s]})):[]}},async beforeRouteUpdate(s,e,d){this.datasetSize=null;const a=v.beforeRouteUpdate;await a(s,e,d)},mounted:function(){const s={html:!0,content:this.$refs["count-triples-content"]},e=this.$refs["count-triples-button"];new k(e,s)},methods:{async countTriplesInGraphs(){this.isDatasetSizeLoading=!0;try{this.datasetSize=await this.$fusekiService.getDatasetSize(this.currentDataset["ds.name"],this.services.query["srv.endpoints"][0]),this.$refs["count-triples-button"].disabled=this.isDatasetSizeLoading,this.datasetStats=await this.$fusekiService.getDatasetStats(this.datasetName)}catch(s){D(this,s)}finally{this.isDatasetSizeLoading=null,this.$refs["count-triples-button"].disabled=!1}}}},w={class:"container-fluid"},G={class:"row mt-4"},R={class:"col-12"},q={class:"card"},B={class:"card-header"},I={class:"card-body"},x={class:"row"},C={class:"col-sm-12 col-md-6"},F=t("h3",{class:"text-center"}," Available Services ",-1),M={key:0,class:"card-text placeholder-glow"},O=t("span",{class:"placeholder col-12"},null,-1),j=t("span",{class:"placeholder col-12"},null,-1),E=t("span",{class:"placeholder col-12"},null,-1),N=[O,j,E],T={class:"col-6 text-right"},U={class:"col-6"},P=["href"],V={class:"row my-4"},A={class:"col-12 text-center"},J=t("h3",null,"Dataset size",-1),W={class:"mb-2"},H={hidden:""},K={ref:"count-triples-content"},Q={class:"text-center"},X=t("div",{class:"alert alert-warning"}," This may be slow and impose a significant load on large datasets. ",-1),Y={ref:"count-triples-button",id:"count-triples-button",type:"button",class:"btn btn-primary","data-bs-toggle":"popover","data-bs-placement":"auto","data-bs-trigger":"focus",title:"Confirm"},Z=t("div",{class:"text-center text-danger my-2"},[t("div",{class:"spinner-border align-middle",role:"status"},[t("span",{class:"visually-hidden"},"Loading...")]),t("strong",null,"Loading...")],-1),tt=t("span",null,"No data",-1),st={class:"col-sm-12 col-md-6"},et=t("h3",{class:"text-center"}," Statistics ",-1),at=t("div",{class:"text-center text-danger my-2"},[t("div",{class:"spinner-border align-middle",role:"status"},[t("span",{class:"visually-hidden"},"Loading...")]),t("strong",null,"Loading...")],-1);function ot(s,e,d,a,r,u){const y=f("Menu"),_=f("jena-table");return i(),o("div",w,[t("div",G,[t("div",R,[t("h2",null,"/"+c(s.datasetName),1),t("div",q,[t("nav",B,[p(y,{"dataset-name":s.datasetName},null,8,["dataset-name"])]),t("div",I,[t("div",null,[t("div",x,[t("div",C,[F,s.services==null?(i(),o("p",M,N)):(i(!0),o(b,{key:1},m(s.services,n=>(i(),o("div",{key:n["srv.type"]},[(i(!0),o(b,null,m(n["srv.endpoints"],l=>(i(),o("div",{class:"row",key:l},[t("div",T,c(n["srv.description"]),1),t("div",U,[t("a",{href:`/${s.datasetName}/${l}`}," /"+c(s.datasetName)+"/"+c(l),9,P)])]))),128))]))),128)),t("div",V,[t("div",A,[J,t("div",W,[t("div",H,[t("div",K,[t("div",Q,[X,t("button",{onClick:e[0]||(e[0]=n=>{u.countTriplesInGraphs(),s.$refs["count-triples-button"].disabled=s.isDatasetStatsLoading}),id:"count-triples-submit-button",type:"button",class:"btn btn-primary me-2"}," submit "),t("button",{class:"btn btn-secondary",onClick:e[1]||(e[1]=n=>s.$refs["count-triples-button"].disabled=s.isDatasetStatsLoading)}," cancel ")])],512)]),t("button",Y," count triples in all graphs ",512)]),p(_,{fields:r.countGraphFields,items:u.countGraphItems,busy:r.isDatasetSizeLoading,id:"dataset-size-table",class:"mt-3",bordered:"",hover:"",small:""},{"table-busy":h(()=>[Z]),empty:h(()=>[tt]),_:1},8,["fields","items","busy"])])])]),t("div",st,[et,p(_,{fields:r.statsFields,items:u.statsItems,busy:s.isDatasetStatsLoading,id:"statistics-table",bordered:"",hover:"",small:""},{"table-busy":h(()=>[at]),"custom-foot":h(n=>[t("tr",null,[(i(!0),o(b,null,m(n.fields,l=>(i(),o("th",{key:l.key},c(u.overall[l.key]),1))),128))])]),_:1},8,["fields","items","busy"])])])])])])])])])}const dt=z($,[["render",ot]]);export{dt as default};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
